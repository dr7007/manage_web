# Generated by Django 2.1 on 2019-04-24 15:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Break_Time',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mon_start', models.TimeField()),
                ('mon_end', models.TimeField()),
                ('tue_start', models.TimeField()),
                ('tue_end', models.TimeField()),
                ('wed_start', models.TimeField()),
                ('wed_end', models.TimeField()),
                ('thu_start', models.TimeField()),
                ('thu_end', models.TimeField()),
                ('fri_start', models.TimeField()),
                ('fri_end', models.TimeField()),
                ('sat_start', models.TimeField()),
                ('sat_end', models.TimeField()),
                ('sun_start', models.TimeField()),
                ('sun_end', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=50)),
                ('x_coordinate', models.FloatField()),
                ('y_coordinate', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Business_Hour',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mon_start', models.TimeField()),
                ('mon_end', models.TimeField()),
                ('tue_start', models.TimeField()),
                ('tue_end', models.TimeField()),
                ('wed_start', models.TimeField()),
                ('wed_end', models.TimeField()),
                ('thu_start', models.TimeField()),
                ('thu_end', models.TimeField()),
                ('fri_start', models.TimeField()),
                ('fri_end', models.TimeField()),
                ('sat_start', models.TimeField()),
                ('sat_end', models.TimeField()),
                ('sun_start', models.TimeField()),
                ('sun_end', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Category_INFO',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_range_type', models.CharField(choices=[('General', 'General'), ('Portion', 'Portion'), ('Size', 'Size')], max_length=10)),
                ('price_range_unit', models.CharField(max_length=10)),
                ('price_range', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('review', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Large_Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Last_Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mon_end', models.TimeField()),
                ('tue_end', models.TimeField()),
                ('wed_end', models.TimeField()),
                ('thu_end', models.TimeField()),
                ('fri_end', models.TimeField()),
                ('sat_end', models.TimeField()),
                ('sun_end', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menu_type', models.CharField(choices=[('GM', 'General Menu'), ('SM', 'Set Menu'), ('CM', 'Course Menu'), ('BM', 'Buffet Menu')], max_length=2)),
                ('name', models.CharField(max_length=50)),
                ('menu_review', models.CharField(max_length=500)),
                ('price_type', models.CharField(choices=[('General', 'General'), ('Portion', 'Portion'), ('Size', 'Size')], max_length=10)),
                ('price_unit', models.CharField(max_length=10)),
                ('price', models.PositiveIntegerField()),
                ('star_rating', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Menu_Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('menu_fb', models.CharField(max_length=500)),
                ('menu_pic', models.CharField(max_length=500)),
                ('editor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='model.Menu')),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=11)),
                ('name', models.CharField(max_length=50)),
                ('branch_name', models.CharField(max_length=30)),
                ('floor', models.PositiveSmallIntegerField()),
                ('possible_review_type', models.CharField(max_length=3)),
                ('status', models.CharField(choices=[('c_Conflict', 'c_Conflict'), ('c_Approved', 'c_Approved'), ('p_Disapproved', 'p_Disapproved'), ('p_Standby', 'p_Standby'), ('p_Approved', 'p_Approved')], max_length=13)),
                ('register_time', models.DateTimeField()),
                ('info_register_info', models.DateTimeField()),
                ('is_active', models.BooleanField()),
                ('active_id', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.PROTECT, to='model.Restaurant')),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='model.Building')),
                ('category_info', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='model.Category_INFO')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Deleted', 'Deleted'), ('Writing', 'Writing'), ('Modified', 'Modified'), ('Deactivated', 'Deactivated'), ('StandBy', 'StandBy'), ('Approved', 'Approved')], max_length=11)),
                ('register_time', models.DateTimeField()),
                ('review_type', models.CharField(choices=[('RSTRT', 'Restaurant'), ('BAR', 'Bar')], max_length=5)),
                ('visit_date', models.DateField()),
                ('rstrt_overview', models.CharField(max_length=500)),
                ('rstrt_atmosphere', models.CharField(max_length=500)),
                ('comment', models.CharField(max_length=500)),
                ('taste_score', models.PositiveSmallIntegerField()),
                ('taste_summary', models.CharField(max_length=45)),
                ('atmosphere_score', models.PositiveSmallIntegerField()),
                ('atmosphere_summary', models.CharField(max_length=45)),
                ('efficiency_score', models.PositiveIntegerField()),
                ('efficiency_summary', models.CharField(max_length=5)),
                ('summary', models.CharField(max_length=40)),
                ('restaurant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='model.Restaurant')),
                ('reviewer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Review_Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('rstrt_overview', models.CharField(max_length=800)),
                ('rstrt_atmosphere', models.CharField(max_length=800)),
                ('comment', models.CharField(max_length=800)),
                ('taste', models.CharField(max_length=300)),
                ('atmosphere', models.CharField(max_length=300)),
                ('efficiency', models.CharField(max_length=300)),
                ('summary', models.CharField(max_length=300)),
                ('editor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='model.Review')),
            ],
        ),
        migrations.CreateModel(
            name='RSTRT_Detail_INFO',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(choices=[('S', 'Small'), ('M', 'Medium'), ('L', 'Large'), ('G', 'Grand')], max_length=1)),
                ('is_multiple', models.BooleanField()),
                ('is_room', models.BooleanField()),
                ('is_self_service', models.BooleanField()),
                ('is_bar_table', models.BooleanField()),
                ('restroom', models.BooleanField()),
                ('restroom_cleanliess', models.CharField(choices=[('High', 'High'), ('Mid', 'Mid'), ('Low', 'Low')], max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name='RSTRT_Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('information', models.CharField(max_length=800)),
                ('menu_pic', models.CharField(max_length=800)),
                ('rstrt_pic', models.CharField(max_length=800)),
                ('editor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='model.Restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='Sales_INFO',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Standby', 'Standby'), ('Approved', 'Approved')], max_length=8)),
                ('phone_number_1', models.CharField(blank=True, max_length=15)),
                ('phone_number_2', models.CharField(blank=True, max_length=15)),
                ('days_off', models.CharField(max_length=7)),
                ('days_24h', models.CharField(max_length=7)),
                ('is_group_reservation', models.BooleanField()),
                ('group_reservation_maximum', models.PositiveSmallIntegerField()),
                ('parking_lot', models.CharField(choices=[('Inside', 'Inside'), ('Outside', 'Outside'), ('None', 'None')], max_length=7)),
                ('parking_lot_info', models.CharField(max_length=100)),
                ('is_valet_parking', models.BooleanField()),
                ('valet_parking_price', models.CharField(max_length=100)),
                ('is_package', models.BooleanField()),
                ('is_delivery', models.BooleanField()),
                ('is_corkage', models.BooleanField()),
                ('corkage_price', models.CharField(max_length=100)),
                ('break_time', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='model.Break_Time')),
                ('business_hour', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='model.Business_Hour')),
                ('last_order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='model.Last_Order')),
            ],
        ),
        migrations.CreateModel(
            name='Small_Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='model.Restaurant')),
            ],
        ),
        migrations.AddField(
            model_name='restaurant',
            name='rstrt_detail_info',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='model.RSTRT_Detail_INFO'),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='sales_info',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='model.Sales_INFO'),
        ),
        migrations.AddField(
            model_name='menu',
            name='review',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='model.Review'),
        ),
        migrations.AddField(
            model_name='large_category',
            name='restaurant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='model.Restaurant'),
        ),
        migrations.AddField(
            model_name='food',
            name='menu',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='model.Menu'),
        ),
        migrations.AddField(
            model_name='category_info',
            name='large_category',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='model.Large_Category'),
        ),
        migrations.AddField(
            model_name='category_info',
            name='small_category',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='model.Small_Category'),
        ),
    ]
